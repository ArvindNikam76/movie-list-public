{"ast":null,"code":"import { RATE_PROVIDERS } from \"../components/MovieDetails/constant\";\nconst romanNumbers = [{\n  1: \"I\"\n}, {\n  2: \"II\"\n}, {\n  3: \"III\"\n}, {\n  4: \"IV\"\n}, {\n  5: \"V\"\n}, {\n  6: \"VI\"\n}, {\n  7: \"VII\"\n}, {\n  8: \"VIII\"\n}, {\n  9: \"IX\"\n}, {\n  10: \"X\"\n}];\nexport const getFormattedRating = rowRatings => {\n  let formattedRatings = [];\n  if (rowRatings) {\n    formattedRatings = rowRatings.map(rating => {\n      if (rating.Source === RATE_PROVIDERS.imdb) {\n        const values = rating.Value.split(\"/\");\n        const perc = Number(values[0]) / Number(values[1]) * 100;\n        return {\n          Source: RATE_PROVIDERS.imdb,\n          Perc: perc.toFixed(0) + \"%\",\n          Value: Number(values[0])\n        };\n      }\n      if (rating.Source === RATE_PROVIDERS.metacritic) {\n        const values = rating.Value.split(\"/\");\n        const Perc = values[0] + \"%\";\n        const Value = Number(values[0]) / 10;\n        return {\n          Source: RATE_PROVIDERS.metacritic,\n          Perc,\n          Value\n        };\n      }\n      return {\n        Source: RATE_PROVIDERS.rotten,\n        Perc: rating.Value,\n        Value: Number(rating.Value.replace(\"%\", \"\")) / 10\n      };\n    });\n  }\n  return formattedRatings;\n};\nexport const getRoman = episode => {\n  if (episode > 10) return episode;\n  return Object.values(romanNumbers[episode - 1])[0];\n};","map":{"version":3,"names":["RATE_PROVIDERS","romanNumbers","getFormattedRating","rowRatings","formattedRatings","map","rating","Source","imdb","values","Value","split","perc","Number","Perc","toFixed","metacritic","rotten","replace","getRoman","episode","Object"],"sources":["/Users/arvind/Documents/GitHub/movie-list-public/src/utils/util.ts"],"sourcesContent":["import { RATE_PROVIDERS } from \"../components/MovieDetails/constant\";\nimport { RatingI, RowRating } from \"../interfaces/RatingInterface\";\nconst romanNumbers = [\n  { 1: \"I\" },\n  { 2: \"II\" },\n  { 3: \"III\" },\n  { 4: \"IV\" },\n  { 5: \"V\" },\n  { 6: \"VI\" },\n  { 7: \"VII\" },\n  { 8: \"VIII\" },\n  { 9: \"IX\" },\n  { 10: \"X\" },\n];\n\nexport const getFormattedRating = (rowRatings: RowRating[]): RatingI[] => {\n  let formattedRatings: RatingI[] = [];\n  if (rowRatings) {\n    formattedRatings = rowRatings.map((rating) => {\n      if (rating.Source === RATE_PROVIDERS.imdb) {\n        const values = rating.Value.split(\"/\");\n        const perc = (Number(values[0]) / Number(values[1])) * 100;\n        return {\n          Source: RATE_PROVIDERS.imdb,\n          Perc: perc.toFixed(0) + \"%\",\n          Value: Number(values[0]),\n        };\n      }\n      if (rating.Source === RATE_PROVIDERS.metacritic) {\n        const values = rating.Value.split(\"/\");\n        const Perc = values[0] + \"%\";\n        const Value = Number(values[0]) / 10;\n        return {\n          Source: RATE_PROVIDERS.metacritic,\n          Perc,\n          Value,\n        };\n      }\n      return {\n        Source: RATE_PROVIDERS.rotten,\n        Perc: rating.Value,\n        Value: Number(rating.Value.replace(\"%\", \"\")) / 10,\n      };\n    });\n  }\n  return formattedRatings;\n};\n\nexport const getRoman = (episode: number): string | number => {\n  if (episode > 10) return episode;\n  return Object.values(romanNumbers[episode - 1])[0];\n};\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,qCAAqC;AAEpE,MAAMC,YAAY,GAAG,CACnB;EAAE,CAAC,EAAE;AAAI,CAAC,EACV;EAAE,CAAC,EAAE;AAAK,CAAC,EACX;EAAE,CAAC,EAAE;AAAM,CAAC,EACZ;EAAE,CAAC,EAAE;AAAK,CAAC,EACX;EAAE,CAAC,EAAE;AAAI,CAAC,EACV;EAAE,CAAC,EAAE;AAAK,CAAC,EACX;EAAE,CAAC,EAAE;AAAM,CAAC,EACZ;EAAE,CAAC,EAAE;AAAO,CAAC,EACb;EAAE,CAAC,EAAE;AAAK,CAAC,EACX;EAAE,EAAE,EAAE;AAAI,CAAC,CACZ;AAED,OAAO,MAAMC,kBAAkB,GAAIC,UAAuB,IAAgB;EACxE,IAAIC,gBAA2B,GAAG,EAAE;EACpC,IAAID,UAAU,EAAE;IACdC,gBAAgB,GAAGD,UAAU,CAACE,GAAG,CAAEC,MAAM,IAAK;MAC5C,IAAIA,MAAM,CAACC,MAAM,KAAKP,cAAc,CAACQ,IAAI,EAAE;QACzC,MAAMC,MAAM,GAAGH,MAAM,CAACI,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;QACtC,MAAMC,IAAI,GAAIC,MAAM,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGI,MAAM,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAI,GAAG;QAC1D,OAAO;UACLF,MAAM,EAAEP,cAAc,CAACQ,IAAI;UAC3BM,IAAI,EAAEF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;UAC3BL,KAAK,EAAEG,MAAM,CAACJ,MAAM,CAAC,CAAC,CAAC;QACzB,CAAC;MACH;MACA,IAAIH,MAAM,CAACC,MAAM,KAAKP,cAAc,CAACgB,UAAU,EAAE;QAC/C,MAAMP,MAAM,GAAGH,MAAM,CAACI,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;QACtC,MAAMG,IAAI,GAAGL,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG;QAC5B,MAAMC,KAAK,GAAGG,MAAM,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QACpC,OAAO;UACLF,MAAM,EAAEP,cAAc,CAACgB,UAAU;UACjCF,IAAI;UACJJ;QACF,CAAC;MACH;MACA,OAAO;QACLH,MAAM,EAAEP,cAAc,CAACiB,MAAM;QAC7BH,IAAI,EAAER,MAAM,CAACI,KAAK;QAClBA,KAAK,EAAEG,MAAM,CAACP,MAAM,CAACI,KAAK,CAACQ,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG;MACjD,CAAC;IACH,CAAC,CAAC;EACJ;EACA,OAAOd,gBAAgB;AACzB,CAAC;AAED,OAAO,MAAMe,QAAQ,GAAIC,OAAe,IAAsB;EAC5D,IAAIA,OAAO,GAAG,EAAE,EAAE,OAAOA,OAAO;EAChC,OAAOC,MAAM,CAACZ,MAAM,CAACR,YAAY,CAACmB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}