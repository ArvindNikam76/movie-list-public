{"ast":null,"code":"var _jsxFileName = \"/Users/arvind/Documents/GitHub/movie-list-public/src/components/Movie/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Rating from \"../Rating\";\nimport { getFormattedRating, getRoman } from \"../../utils/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = _ref => {\n  _s();\n  let {\n    name,\n    episode,\n    date,\n    onMovieClick\n  } = _ref;\n  const [ratings, setRatings] = useState([]);\n  const fetchMoviesRating = name => {\n    fetch(`https://www.omdbapi.com/?apikey=b9a5e69d&t=${name}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setRatings(getFormattedRating(data.Ratings));\n    });\n  };\n  useEffect(() => {\n    fetchMoviesRating(name);\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"movie\",\n    id: `movie-${episode}`,\n    onClick: () => {\n      onMovieClick(episode);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"episode\",\n      children: [\"EPISODE \", episode, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"title\",\n      children: [\"Episode \", getRoman(Number(episode)), \" - \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"ratingTd\",\n      children: /*#__PURE__*/_jsxDEV(Rating, {\n        ratings: ratings,\n        isOnlyStar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"date\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"kKLI/5xQF2AhV2ay7Qz41Vi+ulg=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["useEffect","useState","Rating","getFormattedRating","getRoman","jsxDEV","_jsxDEV","Movie","_ref","_s","name","episode","date","onMovieClick","ratings","setRatings","fetchMoviesRating","fetch","then","response","json","data","Ratings","className","id","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Number","isOnlyStar","_c","$RefreshReg$"],"sources":["/Users/arvind/Documents/GitHub/movie-list-public/src/components/Movie/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Rating from \"../Rating\";\nimport { getFormattedRating, getRoman } from \"../../utils/util\";\nimport { RatingI } from \"../../interfaces/RatingInterface\";\n\ntype MovieProps = {\n  name: string;\n  episode: number;\n  date: string;\n  onMovieClick: Function;\n};\nconst Movie = ({ name, episode, date, onMovieClick }: MovieProps) => {\n  const [ratings, setRatings] = useState<Array<RatingI>>([]);\n\n  const fetchMoviesRating = (name: string) => {\n    fetch(`https://www.omdbapi.com/?apikey=b9a5e69d&t=${name}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setRatings(getFormattedRating(data.Ratings));\n      });\n  };\n\n  useEffect(() => {\n    fetchMoviesRating(name);\n  }, [name]);\n\n  return (\n    <tr\n      className=\"movie\"\n      id={`movie-${episode}`}\n      onClick={() => {\n        onMovieClick(episode);\n      }}\n    >\n      <td className=\"episode\">EPISODE {episode} </td>\n      <td className=\"title\">\n        Episode {getRoman(Number(episode))} - {name}{\" \"}\n      </td>\n      <td className=\"ratingTd\">\n        <Rating ratings={ratings} isOnlyStar />\n      </td>\n      <td className=\"date\">{date}</td>\n    </tr>\n  );\n};\n\nexport default Movie;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,kBAAkB,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAShE,MAAMC,KAAK,GAAGC,IAAA,IAAuD;EAAAC,EAAA;EAAA,IAAtD;IAAEC,IAAI;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAyB,CAAC,GAAAL,IAAA;EAC9D,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAiB,EAAE,CAAC;EAE1D,MAAMe,iBAAiB,GAAIN,IAAY,IAAK;IAC1CO,KAAK,CAAE,8CAA6CP,IAAK,EAAC,CAAC,CACxDQ,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdN,UAAU,CAACZ,kBAAkB,CAACkB,IAAI,CAACC,OAAO,CAAC,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdgB,iBAAiB,CAACN,IAAI,CAAC;EACzB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IACEiB,SAAS,EAAC,OAAO;IACjBC,EAAE,EAAG,SAAQb,OAAQ,EAAE;IACvBc,OAAO,EAAEA,CAAA,KAAM;MACbZ,YAAY,CAACF,OAAO,CAAC;IACvB,CAAE;IAAAe,QAAA,gBAEFpB,OAAA;MAAIiB,SAAS,EAAC,SAAS;MAAAG,QAAA,GAAC,UAAQ,EAACf,OAAO,EAAC,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CxB,OAAA;MAAIiB,SAAS,EAAC,OAAO;MAAAG,QAAA,GAAC,UACZ,EAACtB,QAAQ,CAAC2B,MAAM,CAACpB,OAAO,CAAC,CAAC,EAAC,KAAG,EAACD,IAAI,EAAE,GAAG;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACLxB,OAAA;MAAIiB,SAAS,EAAC,UAAU;MAAAG,QAAA,eACtBpB,OAAA,CAACJ,MAAM;QAACY,OAAO,EAAEA,OAAQ;QAACkB,UAAU;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACLxB,OAAA;MAAIiB,SAAS,EAAC,MAAM;MAAAG,QAAA,EAAEd;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAET,CAAC;AAACrB,EAAA,CAnCIF,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}