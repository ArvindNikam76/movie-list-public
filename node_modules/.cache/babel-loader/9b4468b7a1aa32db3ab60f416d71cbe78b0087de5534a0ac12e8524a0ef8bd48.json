{"ast":null,"code":"var _jsxFileName = \"/Users/arvind/Documents/GitHub/movie-list-public/src/components/MovieList/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Movie from \"../Movie\";\nimport { fetchMovieList } from \"../../utils/server\";\nimport MovieDetails from \"../MovieDetails\";\nimport Filter from \"../Filter\";\nimport Search from \"../Search\";\nimport { sortMovies } from \"./MovieList\";\nimport { getFormattedRating } from \"../../utils/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tempMovilist = [];\nlet _movieDetails = null;\nconst MovieList = () => {\n  _s();\n  const [originalMovies, setOriginalMovies] = useState(tempMovilist);\n  const [movies, setMovies] = useState(tempMovilist);\n  const [movieDetails, setMovieDetails] = useState(_movieDetails);\n  const [loading, setLoading] = useState(false);\n  const [poster, setPoster] = useState(null);\n  const [ratings, setRatings] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    fetchMovieList().then(movieList => {\n      setLoading(false);\n      setMovies(movieList);\n      setOriginalMovies(movieList);\n    }).catch(error => {\n      setLoading(false);\n    });\n  }, []);\n  const handleMovieSelect = id => {\n    const filterMovieDetails = movies.find(movie => {\n      return movie.episode_id === id;\n    }) || null;\n    fetchMovieDetails(filterMovieDetails);\n    setMovieDetails(filterMovieDetails);\n  };\n  const fetchMovieDetails = movieDetails => {\n    fetch(`https://www.omdbapi.com/?apikey=b9a5e69d&t=${movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.title}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setPoster(data.Poster);\n      setRatings(getFormattedRating(data.Ratings));\n    });\n  };\n  const getMovies = () => {\n    if (movies.length) {\n      return movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          onMovieClick: handleMovieSelect,\n          name: movie.title,\n          episode: movie.episode_id,\n          date: movie.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No movies to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  };\n  const handleMovieSearch = searhQuery => {\n    let filterMovies = [];\n    if (searhQuery) {\n      filterMovies = originalMovies.filter(movie => {\n        let moviename = movie.title;\n        return moviename.toLowerCase().includes(searhQuery);\n      });\n      setMovies(filterMovies);\n    } else {\n      setMovies(originalMovies);\n    }\n  };\n  const handleMovieSort = sort => {\n    setMovies(sortMovies(originalMovies, sort));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        onFilterChange: handleMovieSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSearch: handleMovieSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"laoding\",\n      children: \"we are fetching data for you...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-section\",\n      children: [movies.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"movie-list\",\n        children: getMovies()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(MovieDetails, {\n        movieDetails: movieDetails,\n        ratings: ratings,\n        poster: poster\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"xcVp06EnNS5aYch0+d9Z/uRg3eM=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["useEffect","useState","Movie","fetchMovieList","MovieDetails","Filter","Search","sortMovies","getFormattedRating","jsxDEV","_jsxDEV","tempMovilist","_movieDetails","MovieList","_s","originalMovies","setOriginalMovies","movies","setMovies","movieDetails","setMovieDetails","loading","setLoading","poster","setPoster","ratings","setRatings","then","movieList","catch","error","handleMovieSelect","id","filterMovieDetails","find","movie","episode_id","fetchMovieDetails","fetch","title","response","json","data","Poster","Ratings","getMovies","length","map","onMovieClick","name","episode","date","release_date","fileName","_jsxFileName","lineNumber","columnNumber","children","handleMovieSearch","searhQuery","filterMovies","filter","moviename","toLowerCase","includes","handleMovieSort","sort","className","onFilterChange","onSearch","_c","$RefreshReg$"],"sources":["/Users/arvind/Documents/GitHub/movie-list-public/src/components/MovieList/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Movie from \"../Movie\";\nimport { fetchMovieList } from \"../../utils/server\";\nimport MovieDetails from \"../MovieDetails\";\nimport Filter from \"../Filter\";\nimport Search from \"../Search\";\nimport { sortMovies } from \"./MovieList\";\nimport { getFormattedRating } from \"../../utils/util\";\nimport { MovieT } from \"../../interfaces/MoviesInterface\";\nimport { RatingI, SortBy } from \"../../interfaces/RatingInterface\";\n\nlet tempMovilist: MovieT[] = [];\nlet _movieDetails: MovieT | null = null;\n\nconst MovieList = () => {\n  const [originalMovies, setOriginalMovies] = useState(tempMovilist);\n  const [movies, setMovies] = useState(tempMovilist);\n  const [movieDetails, setMovieDetails] = useState(_movieDetails);\n  const [loading, setLoading] = useState(false);\n  const [poster, setPoster] = useState(null);\n  const [ratings, setRatings] = useState<Array<RatingI>>([]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMovieList()\n      .then((movieList) => {\n        setLoading(false);\n        setMovies(movieList);\n        setOriginalMovies(movieList);\n      })\n      .catch((error) => {\n        setLoading(false);\n      });\n  }, []);\n\n  const handleMovieSelect = (id: number) => {\n    const filterMovieDetails =\n      movies.find((movie) => {\n        return movie.episode_id === id;\n      }) || null;\n\n    fetchMovieDetails(filterMovieDetails);\n    setMovieDetails(filterMovieDetails);\n  };\n\n  const fetchMovieDetails = (movieDetails: MovieT | null) => {\n    fetch(`https://www.omdbapi.com/?apikey=b9a5e69d&t=${movieDetails?.title}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setPoster(data.Poster);\n        setRatings(getFormattedRating(data.Ratings));\n      });\n  };\n  const getMovies = () => {\n    if (movies.length) {\n      return movies.map((movie) => {\n        return (\n          <Movie\n            onMovieClick={handleMovieSelect}\n            name={movie.title}\n            episode={movie.episode_id}\n            date={movie.release_date}\n          />\n        );\n      });\n    }\n    return <div>No movies to show</div>;\n  };\n\n  const handleMovieSearch = (searhQuery: string) => {\n    let filterMovies: MovieT[] = [];\n    if (searhQuery) {\n      filterMovies = originalMovies.filter((movie) => {\n        let moviename: string = movie.title;\n        return moviename.toLowerCase().includes(searhQuery);\n      });\n      setMovies(filterMovies);\n    } else {\n      setMovies(originalMovies);\n    }\n  };\n\n  const handleMovieSort = (sort: SortBy) => {\n    setMovies(sortMovies(originalMovies, sort));\n  };\n\n  return (\n    <div className=\"movies-container\">\n      <div className=\"filter-container\">\n        <Filter onFilterChange={handleMovieSort} />\n        <Search onSearch={handleMovieSearch} />\n      </div>\n      {loading ? (\n        <div className=\"laoding\">we are fetching data for you...</div>\n      ) : (\n        <div className=\"movies-section\">\n          {movies.length ? (\n            <table className=\"movie-list\">{getMovies()}</table>\n          ) : null}\n          {\n            <MovieDetails\n              movieDetails={movieDetails}\n              ratings={ratings}\n              poster={poster}\n            />\n          }\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}